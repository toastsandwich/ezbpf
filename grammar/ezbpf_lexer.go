// Code generated from ezbpf.g4 by ANTLR 4.13.2. DO NOT EDIT.

package grammar

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type ezbpfLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var EzbpfLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func ezbpflexerLexerInit() {
	staticData := &EzbpfLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'+'", "'-'", "'*'", "'/'", "'%'", "'&'", "'|'", "'^'", "'<<'",
		"'>>'", "'=='", "'!='", "'<'", "'>'", "'<='", "'>='", "'&&'", "'||'",
		"'!'", "'='", "'+='", "'-='", "'*='", "'/='", "'%='", "'('", "')'",
		"'{'", "'}'", "'['", "']'", "','", "';'", "':'", "'.'", "", "", "",
		"", "", "", "'__u32'", "'__u64'", "'__s32'", "'__s64'", "'u32'", "'u64'",
		"'s32'", "'s64'", "'var'", "'const'", "'char'", "'int'", "'long'", "'short'",
		"'uint'", "'void'", "'struct'", "'fn'", "'return'", "'if'", "'elif'",
		"'else'", "'map'", "'BPF_MAP_TYPE_HASH'", "'BPF_MAP_TYPE_ARRAY'", "'BPF_MAP_TYPE_PERCPU_HASH'",
		"'BPF_MAP_TYPE_PERCPU_ARRAY'", "'BPF_MAP_TYPE_LRU_HASH'", "'BPF_MAP_TYPE_LRU_PERCPU_HASH'",
	}
	staticData.SymbolicNames = []string{
		"", "ADD", "SUB", "MUL", "DIV", "MOD", "BIT_AND", "BIT_OR", "BIT_XOR",
		"LSHIFT", "RSHIFT", "EQ", "NEQ", "LT", "GT", "LTE", "GTE", "AND", "OR",
		"NOT", "ASSIGN", "ADD_ASSIGN", "SUB_ASSIGN", "MUL_ASSIGN", "DIV_ASSIGN",
		"MOD_ASSIGN", "LPAR", "RPAR", "LBRA", "RBRA", "LSQ", "RSQ", "COMMA",
		"SEMI", "COLON", "DOT", "HEX_LITERAL", "OCT_LITERAL", "BIN_LITERAL",
		"DEC_LITERAL", "CHAR_LITERAL", "STRING_LITERAL", "UPTR32", "UPTR64",
		"SPTR32", "SPTR64", "U32", "U64", "S32", "S64", "VAR", "CONST", "CHAR",
		"INT", "LONG", "SHORT", "UINT", "VOID", "STRUCT", "FN", "RETURN", "IF",
		"ELSEIF", "ELSE", "MAP", "BPF_MAP_TYPE_HASH", "BPF_MAP_TYPE_ARRAY",
		"BPF_MAP_TYPE_PERCPU_HASH", "BPF_MAP_TYPE_PERCPU_ARRAY", "BPF_MAP_TYPE_LRU_HASH",
		"BPF_MAP_TYPE_LRU_PERCPU_HASH", "IDENTIFIER", "WS", "COMMENT", "MULTI_COMMENT",
	}
	staticData.RuleNames = []string{
		"NUM", "ALPHA", "ALNUM", "HEX", "OCT", "BIN", "ID_START", "ID_PART",
		"ESC", "ADD", "SUB", "MUL", "DIV", "MOD", "BIT_AND", "BIT_OR", "BIT_XOR",
		"LSHIFT", "RSHIFT", "EQ", "NEQ", "LT", "GT", "LTE", "GTE", "AND", "OR",
		"NOT", "ASSIGN", "ADD_ASSIGN", "SUB_ASSIGN", "MUL_ASSIGN", "DIV_ASSIGN",
		"MOD_ASSIGN", "LPAR", "RPAR", "LBRA", "RBRA", "LSQ", "RSQ", "COMMA",
		"SEMI", "COLON", "DOT", "HEX_LITERAL", "OCT_LITERAL", "BIN_LITERAL",
		"DEC_LITERAL", "CHAR_LITERAL", "STRING_LITERAL", "UPTR32", "UPTR64",
		"SPTR32", "SPTR64", "U32", "U64", "S32", "S64", "VAR", "CONST", "CHAR",
		"INT", "LONG", "SHORT", "UINT", "VOID", "STRUCT", "FN", "RETURN", "IF",
		"ELSEIF", "ELSE", "MAP", "BPF_MAP_TYPE_HASH", "BPF_MAP_TYPE_ARRAY",
		"BPF_MAP_TYPE_PERCPU_HASH", "BPF_MAP_TYPE_PERCPU_ARRAY", "BPF_MAP_TYPE_LRU_HASH",
		"BPF_MAP_TYPE_LRU_PERCPU_HASH", "IDENTIFIER", "WS", "COMMENT", "MULTI_COMMENT",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 74, 609, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7,
		62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7, 65, 2, 66, 7, 66, 2, 67, 7, 67,
		2, 68, 7, 68, 2, 69, 7, 69, 2, 70, 7, 70, 2, 71, 7, 71, 2, 72, 7, 72, 2,
		73, 7, 73, 2, 74, 7, 74, 2, 75, 7, 75, 2, 76, 7, 76, 2, 77, 7, 77, 2, 78,
		7, 78, 2, 79, 7, 79, 2, 80, 7, 80, 2, 81, 7, 81, 2, 82, 7, 82, 1, 0, 1,
		0, 1, 1, 1, 1, 1, 2, 1, 2, 4, 2, 174, 8, 2, 11, 2, 12, 2, 175, 1, 3, 1,
		3, 1, 3, 1, 3, 4, 3, 182, 8, 3, 11, 3, 12, 3, 183, 1, 4, 1, 4, 4, 4, 188,
		8, 4, 11, 4, 12, 4, 189, 1, 5, 1, 5, 1, 5, 1, 5, 4, 5, 196, 8, 5, 11, 5,
		12, 5, 197, 1, 6, 1, 6, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 10,
		1, 10, 1, 11, 1, 11, 1, 12, 1, 12, 1, 13, 1, 13, 1, 14, 1, 14, 1, 15, 1,
		15, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 18, 1, 19, 1, 19,
		1, 19, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 22, 1, 22, 1, 23, 1, 23, 1,
		23, 1, 24, 1, 24, 1, 24, 1, 25, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 27,
		1, 27, 1, 28, 1, 28, 1, 29, 1, 29, 1, 29, 1, 30, 1, 30, 1, 30, 1, 31, 1,
		31, 1, 31, 1, 32, 1, 32, 1, 32, 1, 33, 1, 33, 1, 33, 1, 34, 1, 34, 1, 35,
		1, 35, 1, 36, 1, 36, 1, 37, 1, 37, 1, 38, 1, 38, 1, 39, 1, 39, 1, 40, 1,
		40, 1, 41, 1, 41, 1, 42, 1, 42, 1, 43, 1, 43, 1, 44, 1, 44, 1, 45, 1, 45,
		1, 46, 1, 46, 1, 47, 4, 47, 297, 8, 47, 11, 47, 12, 47, 298, 1, 48, 1,
		48, 1, 48, 3, 48, 304, 8, 48, 1, 48, 1, 48, 1, 49, 1, 49, 1, 49, 5, 49,
		311, 8, 49, 10, 49, 12, 49, 314, 9, 49, 1, 49, 1, 49, 1, 50, 1, 50, 1,
		50, 1, 50, 1, 50, 1, 50, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 52,
		1, 52, 1, 52, 1, 52, 1, 52, 1, 52, 1, 53, 1, 53, 1, 53, 1, 53, 1, 53, 1,
		53, 1, 54, 1, 54, 1, 54, 1, 54, 1, 55, 1, 55, 1, 55, 1, 55, 1, 56, 1, 56,
		1, 56, 1, 56, 1, 57, 1, 57, 1, 57, 1, 57, 1, 58, 1, 58, 1, 58, 1, 58, 1,
		59, 1, 59, 1, 59, 1, 59, 1, 59, 1, 59, 1, 60, 1, 60, 1, 60, 1, 60, 1, 60,
		1, 61, 1, 61, 1, 61, 1, 61, 1, 62, 1, 62, 1, 62, 1, 62, 1, 62, 1, 63, 1,
		63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 64, 1, 64, 1, 64, 1, 64, 1, 64, 1, 65,
		1, 65, 1, 65, 1, 65, 1, 65, 1, 66, 1, 66, 1, 66, 1, 66, 1, 66, 1, 66, 1,
		66, 1, 67, 1, 67, 1, 67, 1, 68, 1, 68, 1, 68, 1, 68, 1, 68, 1, 68, 1, 68,
		1, 69, 1, 69, 1, 69, 1, 70, 1, 70, 1, 70, 1, 70, 1, 70, 1, 71, 1, 71, 1,
		71, 1, 71, 1, 71, 1, 72, 1, 72, 1, 72, 1, 72, 1, 73, 1, 73, 1, 73, 1, 73,
		1, 73, 1, 73, 1, 73, 1, 73, 1, 73, 1, 73, 1, 73, 1, 73, 1, 73, 1, 73, 1,
		73, 1, 73, 1, 73, 1, 73, 1, 74, 1, 74, 1, 74, 1, 74, 1, 74, 1, 74, 1, 74,
		1, 74, 1, 74, 1, 74, 1, 74, 1, 74, 1, 74, 1, 74, 1, 74, 1, 74, 1, 74, 1,
		74, 1, 74, 1, 75, 1, 75, 1, 75, 1, 75, 1, 75, 1, 75, 1, 75, 1, 75, 1, 75,
		1, 75, 1, 75, 1, 75, 1, 75, 1, 75, 1, 75, 1, 75, 1, 75, 1, 75, 1, 75, 1,
		75, 1, 75, 1, 75, 1, 75, 1, 75, 1, 75, 1, 76, 1, 76, 1, 76, 1, 76, 1, 76,
		1, 76, 1, 76, 1, 76, 1, 76, 1, 76, 1, 76, 1, 76, 1, 76, 1, 76, 1, 76, 1,
		76, 1, 76, 1, 76, 1, 76, 1, 76, 1, 76, 1, 76, 1, 76, 1, 76, 1, 76, 1, 76,
		1, 77, 1, 77, 1, 77, 1, 77, 1, 77, 1, 77, 1, 77, 1, 77, 1, 77, 1, 77, 1,
		77, 1, 77, 1, 77, 1, 77, 1, 77, 1, 77, 1, 77, 1, 77, 1, 77, 1, 77, 1, 77,
		1, 77, 1, 78, 1, 78, 1, 78, 1, 78, 1, 78, 1, 78, 1, 78, 1, 78, 1, 78, 1,
		78, 1, 78, 1, 78, 1, 78, 1, 78, 1, 78, 1, 78, 1, 78, 1, 78, 1, 78, 1, 78,
		1, 78, 1, 78, 1, 78, 1, 78, 1, 78, 1, 78, 1, 78, 1, 78, 1, 78, 1, 79, 1,
		79, 5, 79, 573, 8, 79, 10, 79, 12, 79, 576, 9, 79, 1, 80, 4, 80, 579, 8,
		80, 11, 80, 12, 80, 580, 1, 80, 1, 80, 1, 81, 1, 81, 1, 81, 1, 81, 5, 81,
		589, 8, 81, 10, 81, 12, 81, 592, 9, 81, 1, 81, 1, 81, 1, 82, 1, 82, 1,
		82, 1, 82, 5, 82, 600, 8, 82, 10, 82, 12, 82, 603, 9, 82, 1, 82, 1, 82,
		1, 82, 1, 82, 1, 82, 0, 0, 83, 1, 0, 3, 0, 5, 0, 7, 0, 9, 0, 11, 0, 13,
		0, 15, 0, 17, 0, 19, 1, 21, 2, 23, 3, 25, 4, 27, 5, 29, 6, 31, 7, 33, 8,
		35, 9, 37, 10, 39, 11, 41, 12, 43, 13, 45, 14, 47, 15, 49, 16, 51, 17,
		53, 18, 55, 19, 57, 20, 59, 21, 61, 22, 63, 23, 65, 24, 67, 25, 69, 26,
		71, 27, 73, 28, 75, 29, 77, 30, 79, 31, 81, 32, 83, 33, 85, 34, 87, 35,
		89, 36, 91, 37, 93, 38, 95, 39, 97, 40, 99, 41, 101, 42, 103, 43, 105,
		44, 107, 45, 109, 46, 111, 47, 113, 48, 115, 49, 117, 50, 119, 51, 121,
		52, 123, 53, 125, 54, 127, 55, 129, 56, 131, 57, 133, 58, 135, 59, 137,
		60, 139, 61, 141, 62, 143, 63, 145, 64, 147, 65, 149, 66, 151, 67, 153,
		68, 155, 69, 157, 70, 159, 71, 161, 72, 163, 73, 165, 74, 1, 0, 13, 1,
		0, 48, 57, 2, 0, 65, 90, 97, 122, 3, 0, 48, 57, 65, 70, 97, 102, 1, 0,
		48, 55, 1, 0, 48, 49, 3, 0, 65, 90, 95, 95, 97, 122, 4, 0, 48, 57, 65,
		90, 95, 95, 97, 122, 7, 0, 34, 34, 39, 39, 92, 92, 98, 98, 110, 110, 114,
		114, 116, 116, 2, 0, 39, 39, 92, 92, 2, 0, 34, 34, 92, 92, 3, 0, 9, 10,
		13, 13, 32, 32, 2, 0, 10, 10, 13, 13, 1, 0, 42, 42, 612, 0, 19, 1, 0, 0,
		0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0,
		0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1,
		0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43,
		1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0,
		51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0,
		0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0,
		0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0,
		0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81, 1,
		0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0, 0, 87, 1, 0, 0, 0, 0, 89,
		1, 0, 0, 0, 0, 91, 1, 0, 0, 0, 0, 93, 1, 0, 0, 0, 0, 95, 1, 0, 0, 0, 0,
		97, 1, 0, 0, 0, 0, 99, 1, 0, 0, 0, 0, 101, 1, 0, 0, 0, 0, 103, 1, 0, 0,
		0, 0, 105, 1, 0, 0, 0, 0, 107, 1, 0, 0, 0, 0, 109, 1, 0, 0, 0, 0, 111,
		1, 0, 0, 0, 0, 113, 1, 0, 0, 0, 0, 115, 1, 0, 0, 0, 0, 117, 1, 0, 0, 0,
		0, 119, 1, 0, 0, 0, 0, 121, 1, 0, 0, 0, 0, 123, 1, 0, 0, 0, 0, 125, 1,
		0, 0, 0, 0, 127, 1, 0, 0, 0, 0, 129, 1, 0, 0, 0, 0, 131, 1, 0, 0, 0, 0,
		133, 1, 0, 0, 0, 0, 135, 1, 0, 0, 0, 0, 137, 1, 0, 0, 0, 0, 139, 1, 0,
		0, 0, 0, 141, 1, 0, 0, 0, 0, 143, 1, 0, 0, 0, 0, 145, 1, 0, 0, 0, 0, 147,
		1, 0, 0, 0, 0, 149, 1, 0, 0, 0, 0, 151, 1, 0, 0, 0, 0, 153, 1, 0, 0, 0,
		0, 155, 1, 0, 0, 0, 0, 157, 1, 0, 0, 0, 0, 159, 1, 0, 0, 0, 0, 161, 1,
		0, 0, 0, 0, 163, 1, 0, 0, 0, 0, 165, 1, 0, 0, 0, 1, 167, 1, 0, 0, 0, 3,
		169, 1, 0, 0, 0, 5, 173, 1, 0, 0, 0, 7, 177, 1, 0, 0, 0, 9, 185, 1, 0,
		0, 0, 11, 191, 1, 0, 0, 0, 13, 199, 1, 0, 0, 0, 15, 201, 1, 0, 0, 0, 17,
		203, 1, 0, 0, 0, 19, 206, 1, 0, 0, 0, 21, 208, 1, 0, 0, 0, 23, 210, 1,
		0, 0, 0, 25, 212, 1, 0, 0, 0, 27, 214, 1, 0, 0, 0, 29, 216, 1, 0, 0, 0,
		31, 218, 1, 0, 0, 0, 33, 220, 1, 0, 0, 0, 35, 222, 1, 0, 0, 0, 37, 225,
		1, 0, 0, 0, 39, 228, 1, 0, 0, 0, 41, 231, 1, 0, 0, 0, 43, 234, 1, 0, 0,
		0, 45, 236, 1, 0, 0, 0, 47, 238, 1, 0, 0, 0, 49, 241, 1, 0, 0, 0, 51, 244,
		1, 0, 0, 0, 53, 247, 1, 0, 0, 0, 55, 250, 1, 0, 0, 0, 57, 252, 1, 0, 0,
		0, 59, 254, 1, 0, 0, 0, 61, 257, 1, 0, 0, 0, 63, 260, 1, 0, 0, 0, 65, 263,
		1, 0, 0, 0, 67, 266, 1, 0, 0, 0, 69, 269, 1, 0, 0, 0, 71, 271, 1, 0, 0,
		0, 73, 273, 1, 0, 0, 0, 75, 275, 1, 0, 0, 0, 77, 277, 1, 0, 0, 0, 79, 279,
		1, 0, 0, 0, 81, 281, 1, 0, 0, 0, 83, 283, 1, 0, 0, 0, 85, 285, 1, 0, 0,
		0, 87, 287, 1, 0, 0, 0, 89, 289, 1, 0, 0, 0, 91, 291, 1, 0, 0, 0, 93, 293,
		1, 0, 0, 0, 95, 296, 1, 0, 0, 0, 97, 300, 1, 0, 0, 0, 99, 307, 1, 0, 0,
		0, 101, 317, 1, 0, 0, 0, 103, 323, 1, 0, 0, 0, 105, 329, 1, 0, 0, 0, 107,
		335, 1, 0, 0, 0, 109, 341, 1, 0, 0, 0, 111, 345, 1, 0, 0, 0, 113, 349,
		1, 0, 0, 0, 115, 353, 1, 0, 0, 0, 117, 357, 1, 0, 0, 0, 119, 361, 1, 0,
		0, 0, 121, 367, 1, 0, 0, 0, 123, 372, 1, 0, 0, 0, 125, 376, 1, 0, 0, 0,
		127, 381, 1, 0, 0, 0, 129, 387, 1, 0, 0, 0, 131, 392, 1, 0, 0, 0, 133,
		397, 1, 0, 0, 0, 135, 404, 1, 0, 0, 0, 137, 407, 1, 0, 0, 0, 139, 414,
		1, 0, 0, 0, 141, 417, 1, 0, 0, 0, 143, 422, 1, 0, 0, 0, 145, 427, 1, 0,
		0, 0, 147, 431, 1, 0, 0, 0, 149, 449, 1, 0, 0, 0, 151, 468, 1, 0, 0, 0,
		153, 493, 1, 0, 0, 0, 155, 519, 1, 0, 0, 0, 157, 541, 1, 0, 0, 0, 159,
		570, 1, 0, 0, 0, 161, 578, 1, 0, 0, 0, 163, 584, 1, 0, 0, 0, 165, 595,
		1, 0, 0, 0, 167, 168, 7, 0, 0, 0, 168, 2, 1, 0, 0, 0, 169, 170, 7, 1, 0,
		0, 170, 4, 1, 0, 0, 0, 171, 174, 3, 3, 1, 0, 172, 174, 3, 1, 0, 0, 173,
		171, 1, 0, 0, 0, 173, 172, 1, 0, 0, 0, 174, 175, 1, 0, 0, 0, 175, 173,
		1, 0, 0, 0, 175, 176, 1, 0, 0, 0, 176, 6, 1, 0, 0, 0, 177, 178, 5, 48,
		0, 0, 178, 179, 5, 120, 0, 0, 179, 181, 1, 0, 0, 0, 180, 182, 7, 2, 0,
		0, 181, 180, 1, 0, 0, 0, 182, 183, 1, 0, 0, 0, 183, 181, 1, 0, 0, 0, 183,
		184, 1, 0, 0, 0, 184, 8, 1, 0, 0, 0, 185, 187, 5, 48, 0, 0, 186, 188, 7,
		3, 0, 0, 187, 186, 1, 0, 0, 0, 188, 189, 1, 0, 0, 0, 189, 187, 1, 0, 0,
		0, 189, 190, 1, 0, 0, 0, 190, 10, 1, 0, 0, 0, 191, 192, 5, 48, 0, 0, 192,
		193, 5, 98, 0, 0, 193, 195, 1, 0, 0, 0, 194, 196, 7, 4, 0, 0, 195, 194,
		1, 0, 0, 0, 196, 197, 1, 0, 0, 0, 197, 195, 1, 0, 0, 0, 197, 198, 1, 0,
		0, 0, 198, 12, 1, 0, 0, 0, 199, 200, 7, 5, 0, 0, 200, 14, 1, 0, 0, 0, 201,
		202, 7, 6, 0, 0, 202, 16, 1, 0, 0, 0, 203, 204, 5, 92, 0, 0, 204, 205,
		7, 7, 0, 0, 205, 18, 1, 0, 0, 0, 206, 207, 5, 43, 0, 0, 207, 20, 1, 0,
		0, 0, 208, 209, 5, 45, 0, 0, 209, 22, 1, 0, 0, 0, 210, 211, 5, 42, 0, 0,
		211, 24, 1, 0, 0, 0, 212, 213, 5, 47, 0, 0, 213, 26, 1, 0, 0, 0, 214, 215,
		5, 37, 0, 0, 215, 28, 1, 0, 0, 0, 216, 217, 5, 38, 0, 0, 217, 30, 1, 0,
		0, 0, 218, 219, 5, 124, 0, 0, 219, 32, 1, 0, 0, 0, 220, 221, 5, 94, 0,
		0, 221, 34, 1, 0, 0, 0, 222, 223, 5, 60, 0, 0, 223, 224, 5, 60, 0, 0, 224,
		36, 1, 0, 0, 0, 225, 226, 5, 62, 0, 0, 226, 227, 5, 62, 0, 0, 227, 38,
		1, 0, 0, 0, 228, 229, 5, 61, 0, 0, 229, 230, 5, 61, 0, 0, 230, 40, 1, 0,
		0, 0, 231, 232, 5, 33, 0, 0, 232, 233, 5, 61, 0, 0, 233, 42, 1, 0, 0, 0,
		234, 235, 5, 60, 0, 0, 235, 44, 1, 0, 0, 0, 236, 237, 5, 62, 0, 0, 237,
		46, 1, 0, 0, 0, 238, 239, 5, 60, 0, 0, 239, 240, 5, 61, 0, 0, 240, 48,
		1, 0, 0, 0, 241, 242, 5, 62, 0, 0, 242, 243, 5, 61, 0, 0, 243, 50, 1, 0,
		0, 0, 244, 245, 5, 38, 0, 0, 245, 246, 5, 38, 0, 0, 246, 52, 1, 0, 0, 0,
		247, 248, 5, 124, 0, 0, 248, 249, 5, 124, 0, 0, 249, 54, 1, 0, 0, 0, 250,
		251, 5, 33, 0, 0, 251, 56, 1, 0, 0, 0, 252, 253, 5, 61, 0, 0, 253, 58,
		1, 0, 0, 0, 254, 255, 5, 43, 0, 0, 255, 256, 5, 61, 0, 0, 256, 60, 1, 0,
		0, 0, 257, 258, 5, 45, 0, 0, 258, 259, 5, 61, 0, 0, 259, 62, 1, 0, 0, 0,
		260, 261, 5, 42, 0, 0, 261, 262, 5, 61, 0, 0, 262, 64, 1, 0, 0, 0, 263,
		264, 5, 47, 0, 0, 264, 265, 5, 61, 0, 0, 265, 66, 1, 0, 0, 0, 266, 267,
		5, 37, 0, 0, 267, 268, 5, 61, 0, 0, 268, 68, 1, 0, 0, 0, 269, 270, 5, 40,
		0, 0, 270, 70, 1, 0, 0, 0, 271, 272, 5, 41, 0, 0, 272, 72, 1, 0, 0, 0,
		273, 274, 5, 123, 0, 0, 274, 74, 1, 0, 0, 0, 275, 276, 5, 125, 0, 0, 276,
		76, 1, 0, 0, 0, 277, 278, 5, 91, 0, 0, 278, 78, 1, 0, 0, 0, 279, 280, 5,
		93, 0, 0, 280, 80, 1, 0, 0, 0, 281, 282, 5, 44, 0, 0, 282, 82, 1, 0, 0,
		0, 283, 284, 5, 59, 0, 0, 284, 84, 1, 0, 0, 0, 285, 286, 5, 58, 0, 0, 286,
		86, 1, 0, 0, 0, 287, 288, 5, 46, 0, 0, 288, 88, 1, 0, 0, 0, 289, 290, 3,
		7, 3, 0, 290, 90, 1, 0, 0, 0, 291, 292, 3, 9, 4, 0, 292, 92, 1, 0, 0, 0,
		293, 294, 3, 11, 5, 0, 294, 94, 1, 0, 0, 0, 295, 297, 7, 0, 0, 0, 296,
		295, 1, 0, 0, 0, 297, 298, 1, 0, 0, 0, 298, 296, 1, 0, 0, 0, 298, 299,
		1, 0, 0, 0, 299, 96, 1, 0, 0, 0, 300, 303, 5, 39, 0, 0, 301, 304, 3, 17,
		8, 0, 302, 304, 8, 8, 0, 0, 303, 301, 1, 0, 0, 0, 303, 302, 1, 0, 0, 0,
		304, 305, 1, 0, 0, 0, 305, 306, 5, 39, 0, 0, 306, 98, 1, 0, 0, 0, 307,
		312, 5, 34, 0, 0, 308, 311, 3, 17, 8, 0, 309, 311, 8, 9, 0, 0, 310, 308,
		1, 0, 0, 0, 310, 309, 1, 0, 0, 0, 311, 314, 1, 0, 0, 0, 312, 310, 1, 0,
		0, 0, 312, 313, 1, 0, 0, 0, 313, 315, 1, 0, 0, 0, 314, 312, 1, 0, 0, 0,
		315, 316, 5, 34, 0, 0, 316, 100, 1, 0, 0, 0, 317, 318, 5, 95, 0, 0, 318,
		319, 5, 95, 0, 0, 319, 320, 5, 117, 0, 0, 320, 321, 5, 51, 0, 0, 321, 322,
		5, 50, 0, 0, 322, 102, 1, 0, 0, 0, 323, 324, 5, 95, 0, 0, 324, 325, 5,
		95, 0, 0, 325, 326, 5, 117, 0, 0, 326, 327, 5, 54, 0, 0, 327, 328, 5, 52,
		0, 0, 328, 104, 1, 0, 0, 0, 329, 330, 5, 95, 0, 0, 330, 331, 5, 95, 0,
		0, 331, 332, 5, 115, 0, 0, 332, 333, 5, 51, 0, 0, 333, 334, 5, 50, 0, 0,
		334, 106, 1, 0, 0, 0, 335, 336, 5, 95, 0, 0, 336, 337, 5, 95, 0, 0, 337,
		338, 5, 115, 0, 0, 338, 339, 5, 54, 0, 0, 339, 340, 5, 52, 0, 0, 340, 108,
		1, 0, 0, 0, 341, 342, 5, 117, 0, 0, 342, 343, 5, 51, 0, 0, 343, 344, 5,
		50, 0, 0, 344, 110, 1, 0, 0, 0, 345, 346, 5, 117, 0, 0, 346, 347, 5, 54,
		0, 0, 347, 348, 5, 52, 0, 0, 348, 112, 1, 0, 0, 0, 349, 350, 5, 115, 0,
		0, 350, 351, 5, 51, 0, 0, 351, 352, 5, 50, 0, 0, 352, 114, 1, 0, 0, 0,
		353, 354, 5, 115, 0, 0, 354, 355, 5, 54, 0, 0, 355, 356, 5, 52, 0, 0, 356,
		116, 1, 0, 0, 0, 357, 358, 5, 118, 0, 0, 358, 359, 5, 97, 0, 0, 359, 360,
		5, 114, 0, 0, 360, 118, 1, 0, 0, 0, 361, 362, 5, 99, 0, 0, 362, 363, 5,
		111, 0, 0, 363, 364, 5, 110, 0, 0, 364, 365, 5, 115, 0, 0, 365, 366, 5,
		116, 0, 0, 366, 120, 1, 0, 0, 0, 367, 368, 5, 99, 0, 0, 368, 369, 5, 104,
		0, 0, 369, 370, 5, 97, 0, 0, 370, 371, 5, 114, 0, 0, 371, 122, 1, 0, 0,
		0, 372, 373, 5, 105, 0, 0, 373, 374, 5, 110, 0, 0, 374, 375, 5, 116, 0,
		0, 375, 124, 1, 0, 0, 0, 376, 377, 5, 108, 0, 0, 377, 378, 5, 111, 0, 0,
		378, 379, 5, 110, 0, 0, 379, 380, 5, 103, 0, 0, 380, 126, 1, 0, 0, 0, 381,
		382, 5, 115, 0, 0, 382, 383, 5, 104, 0, 0, 383, 384, 5, 111, 0, 0, 384,
		385, 5, 114, 0, 0, 385, 386, 5, 116, 0, 0, 386, 128, 1, 0, 0, 0, 387, 388,
		5, 117, 0, 0, 388, 389, 5, 105, 0, 0, 389, 390, 5, 110, 0, 0, 390, 391,
		5, 116, 0, 0, 391, 130, 1, 0, 0, 0, 392, 393, 5, 118, 0, 0, 393, 394, 5,
		111, 0, 0, 394, 395, 5, 105, 0, 0, 395, 396, 5, 100, 0, 0, 396, 132, 1,
		0, 0, 0, 397, 398, 5, 115, 0, 0, 398, 399, 5, 116, 0, 0, 399, 400, 5, 114,
		0, 0, 400, 401, 5, 117, 0, 0, 401, 402, 5, 99, 0, 0, 402, 403, 5, 116,
		0, 0, 403, 134, 1, 0, 0, 0, 404, 405, 5, 102, 0, 0, 405, 406, 5, 110, 0,
		0, 406, 136, 1, 0, 0, 0, 407, 408, 5, 114, 0, 0, 408, 409, 5, 101, 0, 0,
		409, 410, 5, 116, 0, 0, 410, 411, 5, 117, 0, 0, 411, 412, 5, 114, 0, 0,
		412, 413, 5, 110, 0, 0, 413, 138, 1, 0, 0, 0, 414, 415, 5, 105, 0, 0, 415,
		416, 5, 102, 0, 0, 416, 140, 1, 0, 0, 0, 417, 418, 5, 101, 0, 0, 418, 419,
		5, 108, 0, 0, 419, 420, 5, 105, 0, 0, 420, 421, 5, 102, 0, 0, 421, 142,
		1, 0, 0, 0, 422, 423, 5, 101, 0, 0, 423, 424, 5, 108, 0, 0, 424, 425, 5,
		115, 0, 0, 425, 426, 5, 101, 0, 0, 426, 144, 1, 0, 0, 0, 427, 428, 5, 109,
		0, 0, 428, 429, 5, 97, 0, 0, 429, 430, 5, 112, 0, 0, 430, 146, 1, 0, 0,
		0, 431, 432, 5, 66, 0, 0, 432, 433, 5, 80, 0, 0, 433, 434, 5, 70, 0, 0,
		434, 435, 5, 95, 0, 0, 435, 436, 5, 77, 0, 0, 436, 437, 5, 65, 0, 0, 437,
		438, 5, 80, 0, 0, 438, 439, 5, 95, 0, 0, 439, 440, 5, 84, 0, 0, 440, 441,
		5, 89, 0, 0, 441, 442, 5, 80, 0, 0, 442, 443, 5, 69, 0, 0, 443, 444, 5,
		95, 0, 0, 444, 445, 5, 72, 0, 0, 445, 446, 5, 65, 0, 0, 446, 447, 5, 83,
		0, 0, 447, 448, 5, 72, 0, 0, 448, 148, 1, 0, 0, 0, 449, 450, 5, 66, 0,
		0, 450, 451, 5, 80, 0, 0, 451, 452, 5, 70, 0, 0, 452, 453, 5, 95, 0, 0,
		453, 454, 5, 77, 0, 0, 454, 455, 5, 65, 0, 0, 455, 456, 5, 80, 0, 0, 456,
		457, 5, 95, 0, 0, 457, 458, 5, 84, 0, 0, 458, 459, 5, 89, 0, 0, 459, 460,
		5, 80, 0, 0, 460, 461, 5, 69, 0, 0, 461, 462, 5, 95, 0, 0, 462, 463, 5,
		65, 0, 0, 463, 464, 5, 82, 0, 0, 464, 465, 5, 82, 0, 0, 465, 466, 5, 65,
		0, 0, 466, 467, 5, 89, 0, 0, 467, 150, 1, 0, 0, 0, 468, 469, 5, 66, 0,
		0, 469, 470, 5, 80, 0, 0, 470, 471, 5, 70, 0, 0, 471, 472, 5, 95, 0, 0,
		472, 473, 5, 77, 0, 0, 473, 474, 5, 65, 0, 0, 474, 475, 5, 80, 0, 0, 475,
		476, 5, 95, 0, 0, 476, 477, 5, 84, 0, 0, 477, 478, 5, 89, 0, 0, 478, 479,
		5, 80, 0, 0, 479, 480, 5, 69, 0, 0, 480, 481, 5, 95, 0, 0, 481, 482, 5,
		80, 0, 0, 482, 483, 5, 69, 0, 0, 483, 484, 5, 82, 0, 0, 484, 485, 5, 67,
		0, 0, 485, 486, 5, 80, 0, 0, 486, 487, 5, 85, 0, 0, 487, 488, 5, 95, 0,
		0, 488, 489, 5, 72, 0, 0, 489, 490, 5, 65, 0, 0, 490, 491, 5, 83, 0, 0,
		491, 492, 5, 72, 0, 0, 492, 152, 1, 0, 0, 0, 493, 494, 5, 66, 0, 0, 494,
		495, 5, 80, 0, 0, 495, 496, 5, 70, 0, 0, 496, 497, 5, 95, 0, 0, 497, 498,
		5, 77, 0, 0, 498, 499, 5, 65, 0, 0, 499, 500, 5, 80, 0, 0, 500, 501, 5,
		95, 0, 0, 501, 502, 5, 84, 0, 0, 502, 503, 5, 89, 0, 0, 503, 504, 5, 80,
		0, 0, 504, 505, 5, 69, 0, 0, 505, 506, 5, 95, 0, 0, 506, 507, 5, 80, 0,
		0, 507, 508, 5, 69, 0, 0, 508, 509, 5, 82, 0, 0, 509, 510, 5, 67, 0, 0,
		510, 511, 5, 80, 0, 0, 511, 512, 5, 85, 0, 0, 512, 513, 5, 95, 0, 0, 513,
		514, 5, 65, 0, 0, 514, 515, 5, 82, 0, 0, 515, 516, 5, 82, 0, 0, 516, 517,
		5, 65, 0, 0, 517, 518, 5, 89, 0, 0, 518, 154, 1, 0, 0, 0, 519, 520, 5,
		66, 0, 0, 520, 521, 5, 80, 0, 0, 521, 522, 5, 70, 0, 0, 522, 523, 5, 95,
		0, 0, 523, 524, 5, 77, 0, 0, 524, 525, 5, 65, 0, 0, 525, 526, 5, 80, 0,
		0, 526, 527, 5, 95, 0, 0, 527, 528, 5, 84, 0, 0, 528, 529, 5, 89, 0, 0,
		529, 530, 5, 80, 0, 0, 530, 531, 5, 69, 0, 0, 531, 532, 5, 95, 0, 0, 532,
		533, 5, 76, 0, 0, 533, 534, 5, 82, 0, 0, 534, 535, 5, 85, 0, 0, 535, 536,
		5, 95, 0, 0, 536, 537, 5, 72, 0, 0, 537, 538, 5, 65, 0, 0, 538, 539, 5,
		83, 0, 0, 539, 540, 5, 72, 0, 0, 540, 156, 1, 0, 0, 0, 541, 542, 5, 66,
		0, 0, 542, 543, 5, 80, 0, 0, 543, 544, 5, 70, 0, 0, 544, 545, 5, 95, 0,
		0, 545, 546, 5, 77, 0, 0, 546, 547, 5, 65, 0, 0, 547, 548, 5, 80, 0, 0,
		548, 549, 5, 95, 0, 0, 549, 550, 5, 84, 0, 0, 550, 551, 5, 89, 0, 0, 551,
		552, 5, 80, 0, 0, 552, 553, 5, 69, 0, 0, 553, 554, 5, 95, 0, 0, 554, 555,
		5, 76, 0, 0, 555, 556, 5, 82, 0, 0, 556, 557, 5, 85, 0, 0, 557, 558, 5,
		95, 0, 0, 558, 559, 5, 80, 0, 0, 559, 560, 5, 69, 0, 0, 560, 561, 5, 82,
		0, 0, 561, 562, 5, 67, 0, 0, 562, 563, 5, 80, 0, 0, 563, 564, 5, 85, 0,
		0, 564, 565, 5, 95, 0, 0, 565, 566, 5, 72, 0, 0, 566, 567, 5, 65, 0, 0,
		567, 568, 5, 83, 0, 0, 568, 569, 5, 72, 0, 0, 569, 158, 1, 0, 0, 0, 570,
		574, 3, 13, 6, 0, 571, 573, 3, 15, 7, 0, 572, 571, 1, 0, 0, 0, 573, 576,
		1, 0, 0, 0, 574, 572, 1, 0, 0, 0, 574, 575, 1, 0, 0, 0, 575, 160, 1, 0,
		0, 0, 576, 574, 1, 0, 0, 0, 577, 579, 7, 10, 0, 0, 578, 577, 1, 0, 0, 0,
		579, 580, 1, 0, 0, 0, 580, 578, 1, 0, 0, 0, 580, 581, 1, 0, 0, 0, 581,
		582, 1, 0, 0, 0, 582, 583, 6, 80, 0, 0, 583, 162, 1, 0, 0, 0, 584, 585,
		5, 47, 0, 0, 585, 586, 5, 47, 0, 0, 586, 590, 1, 0, 0, 0, 587, 589, 8,
		11, 0, 0, 588, 587, 1, 0, 0, 0, 589, 592, 1, 0, 0, 0, 590, 588, 1, 0, 0,
		0, 590, 591, 1, 0, 0, 0, 591, 593, 1, 0, 0, 0, 592, 590, 1, 0, 0, 0, 593,
		594, 6, 81, 0, 0, 594, 164, 1, 0, 0, 0, 595, 596, 5, 47, 0, 0, 596, 597,
		5, 42, 0, 0, 597, 601, 1, 0, 0, 0, 598, 600, 8, 12, 0, 0, 599, 598, 1,
		0, 0, 0, 600, 603, 1, 0, 0, 0, 601, 599, 1, 0, 0, 0, 601, 602, 1, 0, 0,
		0, 602, 604, 1, 0, 0, 0, 603, 601, 1, 0, 0, 0, 604, 605, 5, 42, 0, 0, 605,
		606, 5, 47, 0, 0, 606, 607, 1, 0, 0, 0, 607, 608, 6, 82, 0, 0, 608, 166,
		1, 0, 0, 0, 14, 0, 173, 175, 183, 189, 197, 298, 303, 310, 312, 574, 580,
		590, 601, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// ezbpfLexerInit initializes any static state used to implement ezbpfLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewezbpfLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func EzbpfLexerInit() {
	staticData := &EzbpfLexerLexerStaticData
	staticData.once.Do(ezbpflexerLexerInit)
}

// NewezbpfLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewezbpfLexer(input antlr.CharStream) *ezbpfLexer {
	EzbpfLexerInit()
	l := new(ezbpfLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &EzbpfLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "ezbpf.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ezbpfLexer tokens.
const (
	ezbpfLexerADD                          = 1
	ezbpfLexerSUB                          = 2
	ezbpfLexerMUL                          = 3
	ezbpfLexerDIV                          = 4
	ezbpfLexerMOD                          = 5
	ezbpfLexerBIT_AND                      = 6
	ezbpfLexerBIT_OR                       = 7
	ezbpfLexerBIT_XOR                      = 8
	ezbpfLexerLSHIFT                       = 9
	ezbpfLexerRSHIFT                       = 10
	ezbpfLexerEQ                           = 11
	ezbpfLexerNEQ                          = 12
	ezbpfLexerLT                           = 13
	ezbpfLexerGT                           = 14
	ezbpfLexerLTE                          = 15
	ezbpfLexerGTE                          = 16
	ezbpfLexerAND                          = 17
	ezbpfLexerOR                           = 18
	ezbpfLexerNOT                          = 19
	ezbpfLexerASSIGN                       = 20
	ezbpfLexerADD_ASSIGN                   = 21
	ezbpfLexerSUB_ASSIGN                   = 22
	ezbpfLexerMUL_ASSIGN                   = 23
	ezbpfLexerDIV_ASSIGN                   = 24
	ezbpfLexerMOD_ASSIGN                   = 25
	ezbpfLexerLPAR                         = 26
	ezbpfLexerRPAR                         = 27
	ezbpfLexerLBRA                         = 28
	ezbpfLexerRBRA                         = 29
	ezbpfLexerLSQ                          = 30
	ezbpfLexerRSQ                          = 31
	ezbpfLexerCOMMA                        = 32
	ezbpfLexerSEMI                         = 33
	ezbpfLexerCOLON                        = 34
	ezbpfLexerDOT                          = 35
	ezbpfLexerHEX_LITERAL                  = 36
	ezbpfLexerOCT_LITERAL                  = 37
	ezbpfLexerBIN_LITERAL                  = 38
	ezbpfLexerDEC_LITERAL                  = 39
	ezbpfLexerCHAR_LITERAL                 = 40
	ezbpfLexerSTRING_LITERAL               = 41
	ezbpfLexerUPTR32                       = 42
	ezbpfLexerUPTR64                       = 43
	ezbpfLexerSPTR32                       = 44
	ezbpfLexerSPTR64                       = 45
	ezbpfLexerU32                          = 46
	ezbpfLexerU64                          = 47
	ezbpfLexerS32                          = 48
	ezbpfLexerS64                          = 49
	ezbpfLexerVAR                          = 50
	ezbpfLexerCONST                        = 51
	ezbpfLexerCHAR                         = 52
	ezbpfLexerINT                          = 53
	ezbpfLexerLONG                         = 54
	ezbpfLexerSHORT                        = 55
	ezbpfLexerUINT                         = 56
	ezbpfLexerVOID                         = 57
	ezbpfLexerSTRUCT                       = 58
	ezbpfLexerFN                           = 59
	ezbpfLexerRETURN                       = 60
	ezbpfLexerIF                           = 61
	ezbpfLexerELSEIF                       = 62
	ezbpfLexerELSE                         = 63
	ezbpfLexerMAP                          = 64
	ezbpfLexerBPF_MAP_TYPE_HASH            = 65
	ezbpfLexerBPF_MAP_TYPE_ARRAY           = 66
	ezbpfLexerBPF_MAP_TYPE_PERCPU_HASH     = 67
	ezbpfLexerBPF_MAP_TYPE_PERCPU_ARRAY    = 68
	ezbpfLexerBPF_MAP_TYPE_LRU_HASH        = 69
	ezbpfLexerBPF_MAP_TYPE_LRU_PERCPU_HASH = 70
	ezbpfLexerIDENTIFIER                   = 71
	ezbpfLexerWS                           = 72
	ezbpfLexerCOMMENT                      = 73
	ezbpfLexerMULTI_COMMENT                = 74
)
